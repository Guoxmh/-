<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--
    namespace is must be established
-->
<!--命名空间,理解为sql隔离-->
<mapper namespace="com.cn.mapper.OrdersMapper">

    <select id="queryOrderTOUser" resultType="com.cn.po.OrdersEx">
       SELECT  orders.*,username,birthday,address
       FROM orders,USER
       WHERE user_id = user.id;
    </select>

    <resultMap id="queryOrderToUDResultMap" type="com.cn.po.Orders">
        <!--orders-->
        <id column="id" property="id"/>
        <result column="user_id" property="userid"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--user-->
        <association property="user" javaType="com.cn.po.User">
            <id column="userID" property="id"/>
            <result column="username" property="username"/>
            <result column="birthday" property="birthday"/>
            <result column="address" property="address"/>
        </association>
        <!--orderdetail-->
        <collection property="orderdetails" ofType="com.cn.po.Orderdetail">
            <id column="detailID" property="id"/>
            <result column="orders_id" property="ordersId"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>
        </collection>

    </resultMap>
    <select id="queryOrderToUD" resultMap="queryOrderToUDResultMap">
        SELECT  orders.*,
        user.id as userID,
        user.username,
        user.birthday,
        user.address,

        orderdetail.id as detailID,
        orderdetail.orders_id,
        orderdetail.items_id,
        orderdetail.items_num

       FROM orders,USER,orderdetail

       WHERE user_id = user.id
       and  orders.id = orderdetail.orders_id;
    </select>

    <resultMap id="queryOrderToUDIResultMap" type="com.cn.po.Orders">
        <!--本身的数据库数据到java类的属性映射-->
        <!--数据库中的字段 一一对应java类中的属性-->
        <!--ORM-->
        <!--orders-->
        <id column="id" property="id"/>
        <result column="user_id" property="userid"/>
        <result column="number" property="number"/>
        <result column="createtime" property="createtime"/>
        <result column="note" property="note"/>
        <!--user-->
        <association property="user" javaType="com.cn.po.User">
            <id column="userID" property="id"/>
            <result column="username" property="username"/>
            <result column="birthday" property="birthday"/>
            <result column="address" property="address"/>
        </association>
        <!--orderdetail-->
        <collection property="orderdetails" ofType="com.cn.po.Orderdetail">
            <id column="detailID" property="id"/>
            <result column="orders_id" property="ordersId"/>
            <result column="items_id" property="itemsId"/>
            <result column="items_num" property="itemsNum"/>

            <association property="items" javaType="com.cn.po.Items">
                <id column="ItemsID" property="id"/>
                <result column="name" property="name"/>
                <result column="price" property="price"/>
            </association>
        </collection>
    </resultMap>

    <!--输出映射 采用resultMap防止po扩展类泛滥-->
    <select id="queryOrderToUDI" resultMap="queryOrderToUDIResultMap">
             SELECT
        orders.*,
        user.id AS userID,
        user.username,
        user.birthday,
        user.address,

        orderdetail.id AS detailID,
        orderdetail.orders_id,
        orderdetail.items_id,
        orderdetail.items_num,

        items.id AS ItemsID,
        items.name,
        items.price
     FROM
	orders,
     USER,
    orderdetail,
    items
     WHERE
	orders.user_id = user.id
	AND
    orders.id = orderdetail.orders_id
    AND
    orderdetail.items_id = items.id;
    </select>
</mapper>